{"version":3,"file":"static/js/200.9e06ae4e.chunk.js","mappings":"gRACA,GAAgB,aAAe,mCAAmC,kBAAoB,yC,6BCEzEA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oc,8CCSPE,EAAmB,WAC9B,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAqBT,GAFvB,OAEXU,EAFW,OAGjBN,EAASM,GAHQ,gDAKjBC,EAAAA,GAAAA,KAAW,sCALM,yDAAH,qDAQlBH,GACD,GAAE,CAACR,IAYJ,OACE,gBAAKY,UAAWC,EAAAA,aAAhB,SACGV,IACC,4BACE,wBAAKA,EAAMW,SACX,gBAAKC,IAbe,OAAtBZ,EAAMa,YACE,UAAMC,GAEN,yCAAqCd,EAAMa,aAUvBE,MAAM,MAAMC,IAAKhB,EAAMW,SACjD,uBAAIX,EAAMiB,WACV,qCAAajB,EAAMkB,iBACnB,4BACE,sCACA,uBAAIlB,EAAMmB,YACV,oCACA,uBAAInB,EAAMoB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,WAEjD,gBAAIf,UAAWC,EAAAA,kBAAf,WACE,eAAID,UAAWC,EAAAA,kBAAf,UACE,UAACnB,EAAD,CAASkC,GAAG,OAAOC,MAAO,CAAEC,KAAMhC,EAAS+B,MAAMC,MAAjD,WACE,SAAC,MAAD,CAAiBC,KAAK,OADxB,aAKF,yBACE,UAACrC,EAAD,CAASkC,GAAG,UAAUC,MAAO,CAAEC,KAAMhC,EAAS+B,MAAMC,MAApD,WACE,SAAC,MAAD,CAAiBC,KAAK,OADxB,sBAUb,ECrEYC,GAAYrC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sfCGTsC,EAAe,WAAO,IAAD,MAC1BnC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAKa,UAAU,eAAf,WACE,UAACoB,EAAD,CAAWJ,GAAE,8BAAE9B,EAAS+B,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WAA1B,QAAiC,UAA9C,WACE,SAAC,MAAD,CAAaC,KAAK,OADpB,cAIA,SAAClC,EAAD,KACA,SAAC,EAAAqC,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetailsPage.js","components/MovieDetailsComponent/MovieDetailsComponent.styled.jsx","components/MovieDetailsComponent/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"movieDetails_list\":\"MovieDetails_movieDetails_list__G50z9\"};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavItem = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  padding: 15px;\n  border-radius: 4px;\n  border: 2px orange solid;\n  text-decoration: none;\n  color: #362115;\n  min-width: 110px;\n\n  :not(last-child) {\n    margin-right: 10px;\n  }\n\n  &.active {\n    background-color: orange;\n    color: white;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: orange;\n  }\n`;\n","import noPosterMovie from '../../noImg/noPosterFilm.jpg';\nimport css from './MovieDetails.module.css';\nimport { NavItem } from './MovieDetails.styled';\nimport { IoPersonOutline } from 'react-icons/io5';\nimport { BsChatRightText } from 'react-icons/bs';\n// import {ThreeCircles } from  'react-loader-spinner'\n\nimport { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchGetMovieDetails } from '../../api/fetchApi';\nimport { toast } from 'react-toastify';\n\nexport const MovieDetailsCard = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  console.log(movie);\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const data = await fetchGetMovieDetails(movieId);\n        setMovie(data);\n      } catch {\n        toast.warn('Sorry, we don`t have overview yet.');\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n\n  const noPosterFilm = () => {\n    let posterFilm = '';\n    if (movie.poster_path === null) {\n      posterFilm = `${noPosterMovie}`;\n    } else {\n      posterFilm = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n    }\n    return posterFilm;\n  };\n  //   const { title, poster_path, tagline, vote_average, overview, genres } = movie;\n  return (\n    <div className={css.movieDetails}>\n      {movie && (\n        <div>\n          <h1>{movie.title}</h1>\n          <img src={noPosterFilm()} width=\"280\" alt={movie.title} />\n          <p>{movie.tagline}</p>\n          <p>Average: {movie.vote_average}</p>\n          <div>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n          </div>\n          <ul className={css.movieDetails_list}>\n            <li className={css.movieDetails_item}>\n              <NavItem to=\"cast\" state={{ from: location.state.from }}>\n                <IoPersonOutline size=\"18\" />\n                Cast\n              </NavItem>\n            </li>\n            <li>\n              <NavItem to=\"reviews\" state={{ from: location.state.from }}>\n                <BsChatRightText size=\"18\" />\n                Reviews\n              </NavItem>\n            </li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavGoBack = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-left: 60px;\n  border-radius: 6px;\n  border: 2px orange solid;\n  text-decoration: none;\n  color: #362115;\n  width: 110px;\n\n  :not(last-child) {\n    margin-right: 10px;\n  }\n\n  &.active {\n    background-color: orange;\n    color: white;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: orange;\n  }\n`;\n","import { Suspense } from 'react';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { MovieDetailsCard } from '../../pages/MovieDetails/MovieDetailsPage';\nimport { NavGoBack } from './MovieDetailsComponent.styled';\n\nexport const MovieDetails = () => {\n  const location = useLocation();\n\n  return (\n    <div className=\"movieDetails\">\n      <NavGoBack to={location.state?.from ?? '/' ?? '/movies'}>\n        <BiArrowBack size=\"18\" />\n        Go Back\n      </NavGoBack>\n      <MovieDetailsCard />\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n"],"names":["NavItem","styled","NavLink","MovieDetailsCard","location","useLocation","movieId","useParams","useState","movie","setMovie","console","log","useEffect","fetchDetails","fetchGetMovieDetails","data","toast","className","css","title","src","poster_path","noPosterMovie","width","alt","tagline","vote_average","overview","genres","map","genre","name","join","to","state","from","size","NavGoBack","MovieDetails","Suspense","fallback"],"sourceRoot":""}