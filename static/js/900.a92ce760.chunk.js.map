{"version":3,"file":"static/js/900.a92ce760.chunk.js","mappings":"6QACA,EAAuB,mBAAvB,EAAsD,wBAAtD,EAA+F,6BAA/F,EAA4I,4B,SCM/HA,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAdAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAkBT,GAFvB,OAERU,EAFQ,OAGdN,EAAUM,EAAKC,MAHD,gDAKdC,EAAAA,GAAAA,KAAW,uCALG,yDAAH,qDAQfJ,GACD,GAAE,CAACR,IAEAG,EAAOU,OAAS,GACX,kEAIP,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qBACA,eAAID,UAAWC,EAAf,SACGZ,GACCA,EAAOa,KAAI,SAAAC,GACT,IAAIC,EAAc,GAMlB,OAJEA,EADED,EAAME,aACG,yCAAqCF,EAAME,cAExCC,GAGd,gBAAIN,UAAWC,EAAf,WACE,gBACEM,IAAKH,EACLI,MAAM,MACNC,OAAO,MACPC,IAAKP,EAAMQ,QAEb,wBAAKR,EAAMQ,QACX,oCAAYR,EAAMS,eARoBT,EAAMU,GAWjD,QAIV,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_list_item\":\"Cast_cast_list_item__uLsOE\",\"cast_tageline\":\"Cast_cast_tageline__hRvvv\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../../api/fetchApi';\nimport { toast } from 'react-toastify';\nimport noPosterActor from '../../noImg/noPosterActor.jpg';\nimport css from './Cast.module.css';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  console.log(actors);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await fetchMovieCredits(movieId);\n        setActors(data.cast);\n      } catch {\n        toast.warn('Sorry, we don`t have this list yet.');\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  if (actors.length < 1) {\n    return <p>This is cartoon. There aren`t actors.</p>;\n  }\n\n  return (\n    <div className={css.cast}>\n      <h2 className={css.cast_tageline}>Actors</h2>\n      <ul className={css.cast_list}>\n        {actors &&\n          actors.map(actor => {\n            let profilePath = '';\n            if (actor.profile_path) {\n              profilePath = `https://image.tmdb.org/t/p/w500${actor.profile_path}`;\n            } else {\n              profilePath = noPosterActor;\n            }\n            return (\n              <li className={css.cast_list_item} key={actor.id}>\n                <img\n                  src={profilePath}\n                  width=\"150\"\n                  height=\"225\"\n                  alt={actor.name}\n                />\n                <h3>{actor.name}</h3>\n                <p>Played: {actor.character}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n"],"names":["Cast","movieId","useParams","useState","actors","setActors","console","log","useEffect","fetchCast","fetchMovieCredits","data","cast","toast","length","className","css","map","actor","profilePath","profile_path","noPosterActor","src","width","height","alt","name","character","id"],"sourceRoot":""}