{"version":3,"file":"static/js/873.a0f94997.chunk.js","mappings":"+QACA,EAAyB,0BAAzB,EAAkE,gC,SCErDA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OACE,iBAAKC,UAAWC,EAAhB,WACE,4CACA,kBACED,UAAWC,EACXC,KAAK,OACLH,MAAOA,EACPI,YAAY,YACZL,SAAU,SAAAM,GAAC,OAAIN,EAASM,EAAEC,OAAON,MAAtB,MAIlB,E,UCfD,EAA8B,4B,UCUjBO,EAAS,WAAO,IAAD,EACpBC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAE9CC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE8BC,EAAAA,EAAAA,IAAiBH,GAF/C,gBAEYI,EAFZ,EAEYA,QACRR,EAAUQ,GAHd,gDAKIC,EAAAA,GAAAA,KAAW,oBALf,0DAJc,sBACTL,GADS,mCAYdM,EACD,GAAE,CAACN,IAEJ,IAIMO,GAAgBC,EAAAA,EAAAA,UAAQ,WAC5B,OAAOb,EAAOc,QAAO,SAAAC,GAAK,OACxBA,EAAMC,MAAMC,cAAcC,SAASb,EAAUY,cADrB,GAG3B,GAAE,CAACZ,EAAWL,IAEf,OACE,6BACE,SAACb,EAAD,CAAWE,MAAOgB,EAAWjB,SAZb,SAAAC,GAClBe,EAA0B,KAAVf,EAAe,CAAE8B,KAAM9B,GAAU,CAAC,EACnD,KAWG,eAAIC,UAAWC,EAAf,SACGqB,EAAcQ,OAAS,GACtBR,EAAcS,KAAI,SAAAN,GAChB,IAAIO,EAAa,GAMjB,OAJEA,EADwB,OAAtBP,EAAMQ,YACKC,EAEH,yCAAqCT,EAAMQ,cAGrD,UAAC,IAAD,CACEE,GAAE,UAAKV,EAAMW,IAEbC,MAAO,CAAEC,KAAM/B,GAHjB,WAKE,gBACEgC,IAAKP,EACLQ,MAAM,MACNC,OAAO,MACPC,IAAKjB,EAAMC,SAEb,wBAAKD,EAAMC,UATND,EAAMW,GAYhB,QAIV,C","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.js","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"search\":\"SearchBox_search__2nHcS\",\"search_input\":\"SearchBox_search_input__KtSG8\"};","import PropTypes from 'prop-types';\nimport css from './SearchBox.module.css';\n\nexport const SearchBox = ({ onChange, value }) => {\n  return (\n    <div className={css.search}>\n      <h1>Find the movie</h1>\n      <input\n        className={css.search_input}\n        type=\"text\"\n        value={value}\n        placeholder=\"Tipe film\"\n        onChange={e => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\nSearchBox.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movies_list\":\"Movies_movies_list__dUKOB\"};","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\n// import {ThreeCircles } from  'react-loader-spinner'\nimport { fetchSearchMovie } from '../../api/fetchApi';\nimport { toast } from 'react-toastify';\nimport { SearchBox } from '../SearchBox/SearchBox';\nimport noPosterMovie from '../../noImg/noPosterFilm.jpg';\nimport css from './Movies.module.css';\nimport { MoviesItem } from './Movies.styled';\n\nexport const Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryName = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    if (!queryName) {\n      return;\n    }\n    async function fetchSearch() {\n      try {\n        const { results } = await fetchSearchMovie(queryName);\n        setMovies(results);\n      } catch (error) {\n        toast.warn('Write some text.');\n      }\n    }\n    fetchSearch();\n  }, [queryName]);\n\n  const changeQuery = value => {\n    setSearchParams(value !== '' ? { name: value } : {});\n  };\n\n  const visibleMovies = useMemo(() => {\n    return movies.filter(movie =>\n      movie.title.toLowerCase().includes(queryName.toLowerCase())\n    );\n  }, [queryName, movies]);\n\n  return (\n    <main>\n      <SearchBox value={queryName} onChange={changeQuery} />\n      <ul className={css.movies_list}>\n        {visibleMovies.length > 0 &&\n          visibleMovies.map(movie => {\n            let posterFilm = '';\n            if (movie.poster_path === null) {\n              posterFilm = noPosterMovie;\n            } else {\n              posterFilm = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n            }\n            return (\n              <MoviesItem\n                to={`${movie.id}`}\n                key={movie.id}\n                state={{ from: location }}\n              >\n                <img\n                  src={posterFilm}\n                  width=\"280\"\n                  height=\"420\"\n                  alt={movie.title}\n                />\n                <h2>{movie.title}</h2>\n              </MoviesItem>\n            );\n          })}\n      </ul>\n    </main>\n  );\n};\n"],"names":["SearchBox","onChange","value","className","css","type","placeholder","e","target","Movies","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","queryName","get","useEffect","fetchSearchMovie","results","toast","fetchSearch","visibleMovies","useMemo","filter","movie","title","toLowerCase","includes","name","length","map","posterFilm","poster_path","noPosterMovie","to","id","state","from","src","width","height","alt"],"sourceRoot":""}